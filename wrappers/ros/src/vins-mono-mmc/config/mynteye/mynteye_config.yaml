%YAML:1.0
#common parameters
imu_topic: "/mynteye/imu/data_raw"
image_topic: "/mynteye/left/image_raw"
output_path: "/home/nvidia/mynt_vins"

#camera calibration, please replace it with your own calibration file.
#model_type: MEI
#camera_name: camera
#image_width: 752
#image_height: 480
#mirror_parameters:
#   xi: 2.3240502152083149e+00
#distortion_parameters:
#   k1: -7.2846074363884863e-02
#   k2: 7.3922066251669893e-01
#   p1: 7.8031450490717439e-04
#   p2: 1.1125751544447434e-04
#projection_parameters:
#   gamma1: 1.1919574208429231e+03
#   gamma2: 1.1962419519374005e+03
#   u0: 3.9017559066380522e+02
#   v0: 2.5308889949771191e+02

model_type: PINHOLE
camera_name: camera
image_width: 752
image_height: 480
distortion_parameters:
   k1: -2.8287690752301708e-01
   k2: 6.059124303449459e-02
   p1: -1.4976170455444e-04
   p2: 5.5680853018506e-04
projection_parameters:
   fx: 3.6400663891454036047e+02
   fy: 3.6429494103955084938e+02
   cx: 3.9989126870228324151e+02
   cy: 2.5511689365481765890e+02

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0  # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [-0.0064662,  0.00763565, 0.99994994,
          -0.99997909, -0.00646566, -0.00009558,
          0.0000462, -0.99997084, 0.00763611 ]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.02303124,0.04302922, 0.00533646]

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 40            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 4   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.0268014618074          # accelerometer measurement noise standard deviation. #0.599298904976
gyr_n: 0.00888232829671        # gyroscope measurement noise standard deviation.     #0.198614898699
acc_w: 0.00262960861593         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.000379565782927       # gyroscope bias random work noise standard deviation.     #4.0e-5

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 7.6509e-02           # accelerometer measurement noise standard deviation. #0.599298904976
#gyr_n: 9.0086e-03          # gyroscope measurement noise standard deviation.     #0.198614898699
#acc_w: 5.3271e-02        # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 5.5379e-05        # gyroscope bias random work noise standard deviation.     #4.0e-5

g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 1            # useful in real-time and large project
pose_graph_save_path: "/home/nvidia/mynt_vins/1/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.6      # size of camera marker in RVIZ
